name: CI

on: [push, pull_request]

env:
  CARGO_INCREMENTAL: '0'
  CARGO_PROFILE_DEV_DEBUG: '0'
  CARGO_PROFILE_TEST_DEBUG: '0'
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install --no-self-update --profile=minimal --component=rustfmt -- stable
      - run: cargo fmt -- --check --color=always
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: --deny warnings
      RUSTFLAGS: --warn rust-2018-idioms --deny warnings
      RUST_BACKTRACE: '1'
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
          - '1.41.0'
        features:
          -
          - alloc
          - std
        include:
          - toolchain: stable
            components: clippy
          - toolchain: beta
            components: clippy
          - toolchain: nightly
            components: clippy
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17
        with:
          toolchain: ${{ matrix.toolchain }}
          components: ${{ matrix.components }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo doc --verbose --no-default-features '--features=${{ matrix.features }}' --no-deps
      - run: cargo check --verbose --no-default-features '--features=${{ matrix.features }}'
        if: ${{ !contains(matrix.components, 'clippy') }}
      - run: cargo clippy --verbose --tests --no-default-features '--features=${{ matrix.features }}'
        if: contains(matrix.components, 'clippy')
      - run: cargo build --verbose --tests --no-default-features '--features=${{ matrix.features }}'
        if: contains(fromJSON('["stable", "beta", "nightly"]'), matrix.toolchain)
      - run: cargo test --verbose --no-default-features '--features=${{ matrix.features }}'
        if: contains(fromJSON('["stable", "beta", "nightly"]'), matrix.toolchain)

  miri:
    name: Soundness test with Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install --no-self-update nightly --profile=minimal --component=miri && rustup default nightly
      - uses: Swatinem/rust-cache@v2
      - run: cargo miri setup
      - run: cargo miri test -- soundness
